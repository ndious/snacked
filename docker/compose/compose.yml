version: "3.8"

name: snacked

volumes:
  generated_data:

networks:
  snacked_proxy:
    name: snacked_proxy
    driver: bridge
    external: false
  snacked_internal:
    name: snacked_internal
    driver: bridge
    external: false

services:
  traefik:
    image: traefik:v2.10
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "${TRAEFIK_DIR}/traefik.toml:/etc/traefik/traefik.toml:ro"
      - "${TRAEFIK_DIR}/traefik.d:/etc/traefik/traefik.d:ro"
      - "${VAR_DIR}/log/traefik:/logs"
      - "${VAR_DIR}/certs:/etc/certs:ro"
    labels:
      - "traefik.http.routers.traefik-dashboard=true"
    networks:
      - snacked_proxy

  assets:
    extends:
      file: "${ASSETS_DIR}/compose.yml"
      service: assets
    volumes:
      - "${ROOT_DIR}/assets/css:${APP_DIR}/css:ro"
      - "${VAR_DIR}/log/assets:${APP_DIR}/log:rw,delegated"
      - "generated_data:${APP_DIR}/generated:rw"
      - "${ROOT_DIR}/internal:${APP_DIR}/src:ro"
    ports:
      - 45537:45537
    networks:
      - snacked_proxy
    labels:
      - "traefik.http.routers.assets=true"
      - "traefik.docker.network=snacked_proxy"

  db:
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_DB: "${DB}"
    networks:
      - snacked_internal
    ports:
      - 5432:5432

  snacked:
    extends:
      file: "${GO_DIR}/compose.yml"
      service: go
    build:
      target: dev
    volumes:
      - "${GO_DIR}/.air.toml:${APP_DIR}/.air.toml:ro"
      - "${VAR_DIR}/log/snacked:${APP_DIR}/log:rw,delegated"
    ports:
      - 1337:1337
      - 2345:2345
    depends_on:
      - db
    networks:
      - snacked_proxy
      - snacked_internal
    labels:
      - "traefik.http.routers.snacked=true"
      - "traefik.docker.network=snacked_proxy"

  tests:
    extends:
      file: "${GO_DIR}/compose.yml"
      service: go
    build:
      target: test-watch
    volumes:
      - "${VAR_DIR}/log/tests:${APP_DIR}/log:rw,delegated"
